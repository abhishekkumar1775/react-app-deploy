{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selectedYear","onChange","onFilterChange","ExpensesList","list","length","map","expense","id","Expenses","useState","yearSelected","setYear","expenses","filter","iterm","console","log","target","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","toggle","setToggle","formToggleHandler","event","preventDefault","prevState","onSubmit","type","expenseData","Date","onSaveExpenseData","min","step","onClick","NewExpense","enteredExpenseData","Math","random","toString","onAddExpense","DUMMY_EXPENSES","App","setExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a22cac83.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { month: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\nfunction Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseItem(props) {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\"> {props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={props.onFilterChange}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  let expenseContent = <p>No Expense Found.</p>;\r\n\r\n  if (props.list.length == 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.list.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        ></ExpenseItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n  const [yearSelected, setYear] = useState(\"2020\");\r\n\r\n  const yearChangeHandler = (year) => {\r\n    console.log(\"Year Selected is \" + year.target.value);\r\n    setYear(year.target.value);\r\n  };\r\n\r\n  let list = props.expenses.filter(\r\n    (iterm) => iterm.date.getFullYear() == yearSelected\r\n  );\r\n\r\n  // console.log(props.expenses);\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selectedYear={yearSelected}\r\n        onFilterChange={yearChangeHandler}\r\n      />\r\n      <ExpensesList list={list} />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  // document.getElementById('').addEventListener('click', (event) => { });\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(0);\r\n  const [enteredDate, setEnteredDate] = useState(\"0000-00-00\");\r\n\r\n  //   const [userInput, setUserInput] = useState({\r\n  //     enteredTitle: \"\",\r\n  //     enteredAmount: \"\",\r\n  //     enteredDate: \"\",\r\n  //   });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setEnteredTitle(event.target.value); // event store value at every key stroke\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n    // setUserInput( (prevState) => {\r\n    //   return { ...prevState, enteredAmount: event.target.value };\r\n    // }); //always use this way if new state depends upon previous state\r\n    //   since react schedules state update rather than performing it right away\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    console.log(event.target.value);\r\n    setEnteredDate(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = function (event) {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    // console.log(expenseData);\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n  };\r\n\r\n  const [toggle, setToggle] = useState(\"Off\");\r\n\r\n  const formToggleHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"toggling\");\r\n    setToggle((prevState) => {\r\n      if (toggle == \"Off\") return \"On\";\r\n      return \"Off\";\r\n    });\r\n  };\r\n  //   console.log(userInput);\r\n\r\n  if (toggle == \"Off\") {\r\n    return (\r\n      <form onSubmit={formToggleHandler}>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            min=\"2019-01-01\"\r\n            step=\"2022-12-31\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button onClick={formToggleHandler}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    console.log(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevState) => {\n      return [expense, ...expenses];\n    });\n    console.log(\"In app.js expense added\");\n    console.log(expenses);\n  };\n\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Let's get Started\"),\n  //   React.createElement(Expenses, { ...expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={[...expenses]} />\n      {/* while spreading we dont't need to write key value pair in here */}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}